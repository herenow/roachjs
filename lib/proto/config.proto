// Copyright 2014 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License. See the AUTHORS file
// for names of contributors.
//
// Author: Spencer Kimball (spencer.kimball@gmail.com)

package proto;

import "code.google.com/p/gogoprotobuf/gogoproto/gogo.proto";

// Attributes specifies a list of arbitrary strings describing
// node topology, store type, and machine capabilities.
message Attributes {
  repeated string attrs = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"attrs,flow\""];
}

// Replica describes a replica location by node ID (corresponds to a
// host:port via lookup on gossip network), store ID (identifies the
// device) and associated attributes. Replicas are stored in Range
// lookup records (meta1, meta2).
message Replica {
  optional int32 node_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "NodeID"];
  optional int32 store_id = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "StoreID"];
  // Combination of node & store attributes.
  optional Attributes attrs = 3 [(gogoproto.nullable) = false];
}

// RangeDescriptor is the value stored in a range metadata key.
// A range is described using an inclusive start key, a non-inclusive end key,
// and a list of replicas where the range is stored.
message RangeDescriptor {
  optional int64 raft_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "RaftID"];
  // StartKey is the first key which may be contained by this range.
  optional bytes start_key = 2 [(gogoproto.nullable) = false, (gogoproto.customtype) = "Key"];
  // EndKey marks the end of the range's possible keys.  EndKey itself is not
  // contained in this range - it will be contained in the immediately
  // subsequent range.
  optional bytes end_key = 3 [(gogoproto.nullable) = false, (gogoproto.customtype) = "Key"];
  // List of replicas where this range is stored.
  repeated Replica replicas = 4 [(gogoproto.nullable) = false];
}

// GCPolicy defines garbage collection policies which apply to MVCC
// values within a zone.
//
// TODO(spencer): flesh this out to include maximum number of values
//   as well as whether there's an intersection between max values
//   and TTL or a union.
message GCPolicy {
  // TTLSeconds specifies the maximum age of a value before it's
  // garbage collected. Only older versions of values are garbage
  // collected. Specifying <=0 mean older versions are never GC'd.
  optional int32 ttl_seconds = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "TTLSeconds"];
}

// AcctConfig holds accounting configuration.
message AcctConfig {
  optional string cluster_id = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"cluster_id,omitempty\""];
}

// PermConfig holds permission configuration, specifying read/write ACLs.
message PermConfig {
  // ACL lists users with read permissions.
  repeated string read = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"read,omitempty\""];
  // ACL lists users with write permissions.
  repeated string write = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"write,omitempty\""];
}

// ZoneConfig holds configuration that is needed for a range of KV pairs.
message ZoneConfig {
  // ReplicaAttrs is a slice of Attributes, each describing required
  // attributes for each replica in the zone.
  repeated Attributes replica_attrs = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"replicas,omitempty\""];
  optional int64 range_min_bytes = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"range_min_bytes,omitempty\""];
  optional int64 range_max_bytes = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"range_max_bytes,omitempty\""];
  optional GCPolicy gc = 4 [(gogoproto.customname) = "GC", (gogoproto.moretags) = "yaml:\"gc,omitempty\""];
}
